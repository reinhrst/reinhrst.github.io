<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" width="1200px" height="630px">
    <style>
        .block {
            fill: none;
            stroke-width: 3px;
            stroke: black;
        }
        .lambda {
            fill: orange;
            stroke-width: 1px;
            stroke: black;
        }
        #lambda {
            transform: translate(100px, 50px);
        }
        #lambdatext {
            font-size: 15px;
            font-family: monospace;
            transform: translate(100px, 110px);
        }

        #lambdatext text {
            -webkit-filter: drop-shadow( 3px 3px 2px rgba(0, 0, 0, .7));
            -webkit-transform: perspective(100px) rotateX(30deg);
            -webkit-transform-origin: 100px 0%;
            fill: url(#fade);
        }
        #layer {
            transform: translate(600px, 150px);
        }
        #layer2 {
            transform: translate(900px, 150px);
        }
        text.layer {
            font-family: monospace;
            font-size: 30px;
        }
        text.layeritems {
            font-family: monospace;
            font-size: 15px;
        }
        #arrows .line {
            fill: none;
            stroke: #444;
            stroke-width: 3px;
        }
    </style>
    <defs>
        <linearGradient id="fade" x1="0" y1="0" x2="0" y2="100%">
            <stop stop-color="rgba(255, 0, 0, .8)" offset="0%" />
            <stop stop-color="rgba(0, 0, 0, 0)" offset="97%" />
        </linearGradient>
    </defs>
    <rect width="100%" height="100%" style="fill: #F7F7F7;" />
    <g id="lambda">
        <rect class="block" width="200" height="50" rx="10" />
        <path class="lambda" d="M25,10 L25,5 L35,5 L55,45 L50,45 L40,25 L30,45 L25,45 L37.5,20 L32.5,10 Z" />
    </g>
    <g id="lambdatext">
        <text x="0" y="0" dy="0">
            <tspan x="0" dy=".6em">import numpy as np</tspan>
            <tspan x="0" dy="1.2em">from defusedxml import cElementTree as ET</tspan>
            <tspan x="0" dy="2.4em">def handler(event, context):</tspan>
            <tspan x="3em" dy="1.2em">x = np.arange(10).reshape((2, 5))</tspan>
            <tspan x="3em" dy="1.2em">try:</tspan>
            <tspan x="6em" dy="1.2em">ET.fromstring(event["svgdata"])
            </tspan>
            <tspan x="3em" dy="1.2em">except KeyError:</tspan>
        </text>
    </g>
    <g id="layer">
        <rect class="block" width="265" height="50" rx="10" />
        <text x="15" y="35" class="layer">MyLayer</text>
        <rect class="block" x="40" y="50" width="215" height="90" />
        <text y="60" class="layeritems">
            <tspan x="50" dy=".6em">pip install:</tspan>
            <tspan x="65" dy="1.2em">defusedxml&gt;=0.8,&lt;0.9</tspan>
            <tspan x="65" dy="1.2em">abstractcp</tspan>
            <tspan x="65" dy="1.2em">requests</tspan>
        </text>
    </g>
    <g id="layer2">
        <rect class="block" width="250" height="50" rx="10" />
        <text x="15" y="35" class="layer">ScienceLayer</text>
        <rect class="block" x="40" y="50" width="150" height="70" />
        <text y="60" class="layeritems">
            <tspan x="50" dy=".6em">pip install:</tspan>
            <tspan x="65" dy="1.2em">numpy==1.20</tspan>
            <tspan x="65" dy="1.2em">scipy==1.6.1</tspan>
        </text>
    </g>
    <g id="arrows">
        <path class="line" d="M310,75 L732.5,75 L732.5,150" />
        <path class="line" d="M310,75 L1025,75 L1025,150" />
        <path class="head" d="M300,75 L315,67 L315,83 Z" />
    </g>
</svg>
